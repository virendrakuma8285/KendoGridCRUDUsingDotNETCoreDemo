import * as tslib_1 from "tslib";
import { Component, Input, HostBinding } from '@angular/core';
import { isPresent } from '../../utils';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { NumericFilterComponent } from '../numeric-filter.component';
/**
 * Represents a numeric filter menu component.
 *
 * @example
 *  ```ts-no-run
 *      <kendo-grid-column field="UnitPrice" title="Unit Price">
 *          <ng-template kendoGridFilterMenuTemplate let-filter let-column="column" let-filterService="filterService">
 *          <kendo-grid-numeric-filter-menu
 *              [column]="column"
 *              [filter]="filter"
 *              [filterService]="filterService"
 *              >
 *          </kendo-grid-numeric-filter-menu>
 *          </ng-template>
 *      </kendo-grid-column>
 *   ```
 */
var NumericFilterMenuComponent = (function (_super) {
    tslib_1.__extends(NumericFilterMenuComponent, _super);
    function NumericFilterMenuComponent(localization) {
        var _this = _super.call(this, null, localization) || this;
        _this.logicOperators = [
            { text: "And", value: "and" },
            { text: "Or", value: "or" }
        ];
        /**
         * The current menu filter.
         * @type {CompositeFilterDescriptor}
         */
        _this.filter = { filters: [], logic: "and" };
        /**
         * Determines if the second criterion inputs should be shown
         */
        _this.extra = true;
        return _this;
    }
    Object.defineProperty(NumericFilterMenuComponent.prototype, "hostClasses", {
        /**
         * @hidden
         */
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumericFilterMenuComponent.prototype, "firstFilter", {
        get: function () {
            if (isPresent(this.filter) && isPresent(this.filter.filters) && this.filter.filters.length) {
                return this.filter.filters[0];
            }
            else {
                return this.insertDefaultFilter(0, {
                    field: (this.column || {}).field,
                    operator: this.currentOperator
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumericFilterMenuComponent.prototype, "secondFilter", {
        get: function () {
            if (isPresent(this.filter) && isPresent(this.filter.filters) && this.filter.filters.length > 1) {
                return this.filter.filters[1];
            }
            else {
                return this.insertDefaultFilter(1, {
                    field: (this.column || {}).field,
                    operator: this.currentOperator
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    NumericFilterMenuComponent.prototype.logicChange = function (value) {
        this.filter.logic = value;
    };
    NumericFilterMenuComponent.prototype.insertDefaultFilter = function (index, filter) {
        this.filter = (this.filter || { filters: [], logic: "and" });
        this.filter.filters[index] = filter;
        return filter;
    };
    return NumericFilterMenuComponent;
}(NumericFilterComponent));
export { NumericFilterMenuComponent };
NumericFilterMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'kendo-grid-numeric-filter-menu',
                template: "\n        <kendo-grid-numeric-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-numeric-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n    "
            },] },
];
/** @nocollapse */
NumericFilterMenuComponent.ctorParameters = function () { return [
    { type: LocalizationService, },
]; };
NumericFilterMenuComponent.propDecorators = {
    'hostClasses': [{ type: HostBinding, args: ['class.k-filtercell',] },],
    'column': [{ type: Input },],
    'filter': [{ type: Input },],
    'extra': [{ type: Input },],
    'filterService': [{ type: Input },],
};
