"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var utils_1 = require("../../utils");
var string_filter_component_1 = require("../string-filter.component");
var kendo_angular_l10n_1 = require("@progress/kendo-angular-l10n");
var StringFilterMenuComponent = (function (_super) {
    tslib_1.__extends(StringFilterMenuComponent, _super);
    function StringFilterMenuComponent(localization) {
        var _this = _super.call(this, null, localization) || this;
        _this.logicOperators = [
            { text: "And", value: "and" },
            { text: "Or", value: "or" }
        ];
        /**
         * The current menu filter.
         * @type {CompositeFilterDescriptor}
         */
        _this.filter = { filters: [], logic: "and" };
        /**
         * Determines if the second criterion inputs should be shown
         */
        _this.extra = true;
        return _this;
    }
    Object.defineProperty(StringFilterMenuComponent.prototype, "hostClasses", {
        /**
         * @hidden
         */
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StringFilterMenuComponent.prototype, "firstFilter", {
        get: function () {
            if (utils_1.isPresent(this.filter) && utils_1.isPresent(this.filter.filters) && this.filter.filters.length) {
                return this.filter.filters[0];
            }
            else {
                return this.insertDefaultFilter(0, {
                    field: (this.column || {}).field,
                    operator: this.currentOperator
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StringFilterMenuComponent.prototype, "secondFilter", {
        get: function () {
            if (utils_1.isPresent(this.filter) && utils_1.isPresent(this.filter.filters) && this.filter.filters.length > 1) {
                return this.filter.filters[1];
            }
            else {
                return this.insertDefaultFilter(1, {
                    field: (this.column || {}).field,
                    operator: this.currentOperator
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    StringFilterMenuComponent.prototype.logicChange = function (value) {
        this.filter.logic = value;
    };
    StringFilterMenuComponent.prototype.insertDefaultFilter = function (index, filter) {
        this.filter = (this.filter || { filters: [], logic: "and" });
        this.filter.filters[index] = filter;
        return filter;
    };
    return StringFilterMenuComponent;
}(string_filter_component_1.StringFilterComponent));
StringFilterMenuComponent.decorators = [
    { type: core_1.Component, args: [{
                selector: 'kendo-grid-string-filter-menu',
                template: "\n        <kendo-grid-string-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\">\n        </kendo-grid-string-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-string-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\">\n        </kendo-grid-string-filter-menu-input>\n    "
            },] },
];
/** @nocollapse */
StringFilterMenuComponent.ctorParameters = function () { return [
    { type: kendo_angular_l10n_1.LocalizationService, },
]; };
StringFilterMenuComponent.propDecorators = {
    'hostClasses': [{ type: core_1.HostBinding, args: ['class.k-filtercell',] },],
    'column': [{ type: core_1.Input },],
    'filter': [{ type: core_1.Input },],
    'extra': [{ type: core_1.Input },],
    'filterService': [{ type: core_1.Input },],
};
exports.StringFilterMenuComponent = StringFilterMenuComponent;
